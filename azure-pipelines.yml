# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'Test-Azure-Deployment'

  # Function app name
  functionAppName: 'first_azure_function_python'

  # Working Directory
  workingDirectory: './'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
      displayName: 'Use Python Version 3.9'
      continueOnError: False

    - bash: |
        ls -la

    - script: |
        ls -la
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install --target="./.venv/lib/python3.9/site-packages" -r ./requirements.txt 
      workingDirectory: '$(workingDirectory)'
      displayName: "Install Requirements"
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
        replaceExistingArchive: true
    - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionAppLinux
              appName: First-Azure-Function-App-test
              package: '$(Pipeline.Workspace)/drop/Application$(Build.BuildId).zip'